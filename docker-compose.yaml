services:
  db:
    container_name: db
    build:
      context: .
      dockerfile: db/Dockerfile
    volumes:
      - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=core
    ports:
      - 5434:5432
    networks:
      - earnin_network
  
  redis:
    container_name: redis_1
    image: redis:6.2-alpine
    ports:
      - 6380:6379
    networks:
      - earnin_network

  api:
    platform: linux/amd64
    image: api
    container_name: api
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/core
      - REDIS_URL=redis://redis:6379/0
    ports:
      - 8002:8000
    volumes:
      - .:/usr/src/app
    depends_on:
      - db
      - redis
    networks:
      - earnin_network

  worker:
    platform: linux/amd64
    image: api
    container_name: worker
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A earnin.celery.app worker --concurrency=3 --max-tasks-per-child=500 -l info
    volumes:
      - .:/usr/src/app
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/core
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - earnin_network

  scheduler:
    platform: linux/amd64
    image: api
    container_name: scheduler
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A earnin.celery.app beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/usr/src/app
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/core
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - earnin_network

volumes:
  cache:
    driver: local

networks:
  earnin_network:
    driver: bridge
